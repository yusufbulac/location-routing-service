basePath: /
definitions:
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.LocationRequest:
    properties:
      color:
        type: string
      latitude:
        maximum: 90
        minimum: -90
        type: number
      longitude:
        maximum: 180
        minimum: -180
        type: number
      name:
        type: string
    required:
    - color
    - latitude
    - longitude
    - name
    type: object
  model.Location:
    properties:
      color:
        type: string
      created_at:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing and routing locations.
  title: Location Routing Service API
  version: "1.0"
paths:
  /api/v1/locations:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Location'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List all locations
      tags:
      - locations
    post:
      consumes:
      - application/json
      description: Adds a new location with name, coordinates and color
      parameters:
      - description: Location JSON
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/dto.LocationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Location'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Add new location
      tags:
      - locations
  /api/v1/locations/{id}:
    get:
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Location'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get location by ID
      tags:
      - locations
    put:
      consumes:
      - application/json
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      - description: Location JSON
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/dto.LocationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Location'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update an existing location
      tags:
      - locations
swagger: "2.0"
